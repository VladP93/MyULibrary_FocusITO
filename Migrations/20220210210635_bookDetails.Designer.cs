// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyULibrary.Models;

namespace MyULibrary.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220210210635_bookDetails")]
    partial class bookDetails
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyULibrary.Models.Book", b =>
                {
                    b.Property<int>("Idbook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenreIdGenre")
                        .HasColumnType("int");

                    b.Property<int>("IdGenre")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedYear")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Idbook");

                    b.HasIndex("GenreIdGenre");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("MyULibrary.Models.BookRegistry", b =>
                {
                    b.Property<int>("IdBookRegistry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookIdbook")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCheckout")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReturn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBook")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<bool>("Returned")
                        .HasColumnType("bit");

                    b.Property<int?>("StudentIdPerson")
                        .HasColumnType("int");

                    b.HasKey("IdBookRegistry");

                    b.HasIndex("BookIdbook");

                    b.HasIndex("StudentIdPerson");

                    b.ToTable("BookRegistry");
                });

            modelBuilder.Entity("MyULibrary.Models.Genre", b =>
                {
                    b.Property<int>("IdGenre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdGenre");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("MyULibrary.Models.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("RolIdRol")
                        .HasColumnType("int");

                    b.HasKey("IdPerson");

                    b.HasIndex("RolIdRol");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MyULibrary.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("MyULibrary.Models.Book", b =>
                {
                    b.HasOne("MyULibrary.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreIdGenre");
                });

            modelBuilder.Entity("MyULibrary.Models.BookRegistry", b =>
                {
                    b.HasOne("MyULibrary.Models.Book", "Book")
                        .WithMany("Registries")
                        .HasForeignKey("BookIdbook");

                    b.HasOne("MyULibrary.Models.Person", "Student")
                        .WithMany("Registries")
                        .HasForeignKey("StudentIdPerson");
                });

            modelBuilder.Entity("MyULibrary.Models.Person", b =>
                {
                    b.HasOne("MyULibrary.Models.Rol", "Rol")
                        .WithMany("Persons")
                        .HasForeignKey("RolIdRol");
                });
#pragma warning restore 612, 618
        }
    }
}
